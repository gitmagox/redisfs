

Introduction
------------

Redis is a high-performance key/value store which allows the setting
and restoring of values from a memory-backed store.

Intuitively it might seem that basing a filesystem around a simple
key=value store isn't such a practical endeavour, but happily redis
also has several useful abilities built-in, including:

  * sets
  * hashes
  * lists.

Using only key+value pairs, and the notion of a set, we can implement
a simple filesystem, which is beautifully ready for replication.



Storage
-------

This filesystem makes use of two of redis's abilities:

  * KEY storage.
  * SET storage.

Our filesystem is built around the notion that a directory contains
entries, and these entries are members of a set named after the parent
directory.

For example consider the directory tree:

  /mnt/redis/foo/
  /mnt/redis/README

Here we see a top-level directory "/mnt/redis" containing a single
sub-directory "foo" and a file "README".

For each entry, be it a file or a directory, we have a unique identifier
which we've called an "INODE number".  This may be used to store
retrieve, and search for information:

   INODE:1:UID   -> The owner of the inode with ID 1.
   INODE:1:GID   -> The owner of the inode with ID 1.
   INODE:1:SIZE  -> The size of the object with inode #1.
   INODE:1:NAME  -> The name of the object with inode #1.
   ..

So we might see this:

   INODE:1:NAME => "foo"
   INODE:1:MODE => "0755"
   INODE:1:GID  => "0"
   INODE:1:UID  => "0"
   INODE:1:TYPE => "dir"
   INODE:1:CTIME => "..."

Similarly the entry for "/README" might look like this:

   INODE:2:NAME => "README"
   INODE:2:MODE => "0644"
   INODE:2:GID  => "0"
   INODE:2:UID  => "0"
   INODE:2:TYPE => "file"

The actual contents of a directory are stored in a set, named after
the directory:

   SMEMBERS DIR:/ -> { "1", "2" }

(In actual fact we add a unique prefix to each key, to allow you to
mount multiple filesystems on the same host.)


Getting Started
---------------

Download the code and run "make".

Execute ./src/redisfs --help

Steve
--
